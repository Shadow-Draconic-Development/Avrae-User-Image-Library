embed
<drac2>
# *******************************************************
# * This work includes material written by Seth Hartman (aka ShadowsStride)
# * and is licensed under the Creative Commons Attribution 4.0 International 
# * License available at https://creativecommons.org/licenses/by/4.0/legalcode.
# *******************************************************


def search_list(query: str, item_list: list[str]) -> list[str]|None:
    """
    Searches for item in list.

    Args:
        query (str): The query being made
        item_list (list): List of items

    Return:
        list[str]|None: If it finds at least one match, it returns the item(s) in a list, otherwise it returns None
    """

    # Finds at least 1 match
    if len(item_results := [item for item in item_list if query.lower() in item.lower()]) > 0:
        return item_results

    # If it finds no matches
    else:
        return None


def main(input_list: list[str]) -> tuple(str, str, str):
    """
    Main program function

    Args:
        input_list (list[str]): List of user inputs

    Return:
        str: Title
        str: Body paragraph
        str: Image URL    
    """

    # If there was at least one input
    if len(input_list) > 0:

        # If UVAR exists, load dictionary
        if (uvar_test := get_uvar("imageLibrary")):
            uvar_dict = load_json(uvar_test)

            # If there is at least one match
            if (search_result := search_list(input_list[0], uvar_dict.keys())):

                # If there is exactly one match, backup dictionary, update dictionary
                if len(search_result) == 1:
                    set_uvar("imageLibraryBackup", dump_json(uvar_dict))
                    image_url = uvar_dict.pop(search_result[0])
                    set_uvar("imageLibrary", dump_json(uvar_dict))

                    return f"`{search_result[0]}` Removed From Image Library", "", image_url

                # If there is more than one match
                else:

                    # For each match
                    for match in search_result:

                        # If it does not match up exactly
                        if match.lower() != input_list[0].lower():
                            pass

                        # If it does match up exactly, backup dictionary, update dictionary
                        else:
                            set_uvar("imageLibraryBackup", dump_json(uvar_dict))
                            image_url = uvar_dict.pop(match)
                            set_uvar("imageLibrary", dump_json(uvar_dict))

                            return f"`{match}` Removed From Image Library", "", image_url

                    search_result = [f"`{item}`" for item in search_result]

                    search_result.insert(0, "**Multiple Matches Found:**")

                    return "You Have Been Sneak Attacked by an Error", "\n".join(search_result), "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-User-Image-Library/main/Data/error.png"

            # If there were no matches
            else:
                return "You Have Been Sneak Attacked by an Error", f"Image not found (`{input_list[0]}`)", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-User-Image-Library/main/Data/error.png"

        # If UVAR does not exist
        else:
            return "You Have Been Sneak Attacked by an Error", "Your image library has not been created yet", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-User-Image-Library/main/Data/error.png"

    # If no inputs were given
    else:
        return "You Have Been Sneak Attacked by an Error", "Expected image name", "https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-User-Image-Library/main/Data/error.png"


# Main program function
title, f, image = main(&ARGS&)


</drac2>
-title "{{title}}"
-f "{{f}}"
-image "{{image}}"
-footer "{{ctx.prefix}}image remove [image name] | 2/7/24 | ShadowsStride"